// L·∫•y c√°c element c·∫ßn thi·∫øt t·ª´ HTML
const startButton = document.getElementById("start-btn");
const nextButton = document.getElementById("next-btn");
const translateButton = document.getElementById("translate-btn"); // N√∫t d·ªãch
const questionContainerElement = document.getElementById("question-container");
const questionElement = document.getElementById("question");
const translatedAnswersElement = document.getElementById("translated-answers"); // TH√äM D√íNG N√ÄY
const translatedQuestionElement = document.getElementById(
  "translated-question"
); // V√πng hi·ªÉn th·ªã b·∫£n d·ªãch c√¢u h·ªèi
const answerButtonsElement = document.getElementById("answer-buttons");
const confirmButton = document.getElementById("confirm-btn");

let availableQuestions, usedQuestions, currentQuestionIndex;
let score = 0;
let totalQuestions = 0;

// G·∫Øn s·ª± ki·ªán cho c√°c n√∫t
startButton.addEventListener("click", startGame);
nextButton.addEventListener("click", () => {
  currentQuestionIndex++;
  setNextQuestion();
});
translateButton.addEventListener("click", toggleTranslation); // G·∫Øn h√†m b·∫≠t/t·∫Øt d·ªãch

// H√†m b·∫Øt ƒë·∫ßu tr√≤ ch∆°i
function startGame() {
  startButton.classList.add("hide"); // ·∫®n n√∫t Start
  document.querySelector(".logo-container").classList.add("hide"); // ·∫®n logo

  // Hi·ªÉn th·ªã l·∫°i ph·∫ßn c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi
  questionElement.classList.remove("hide");
  answerButtonsElement.classList.remove("hide");

  // Initialize question pools and score
  availableQuestions = [...questions]; // Create a copy of all questions
  usedQuestions = []; // Reset used questions array
  currentQuestionIndex = 0; // ƒê·∫∑t l·∫°i ch·ªâ s·ªë c√¢u h·ªèi
  score = 0; // ƒê·∫∑t l·∫°i ƒëi·ªÉm s·ªë
  totalQuestions = 0; // ƒê·∫∑t l·∫°i s·ªë c√¢u h·ªèi ƒë√£ tr·∫£ l·ªùi
  questionContainerElement.classList.remove("hide"); // Hi·ªÉn th·ªã v√πng ch·ª©a c√¢u h·ªèi
  nextButton.classList.remove("hide"); // Hi·ªÉn th·ªã n√∫t Next
  translateButton.classList.remove("hide"); // Hi·ªÉn th·ªã n√∫t d·ªãch
  setNextQuestion(); // Hi·ªÉn th·ªã c√¢u h·ªèi ƒë·∫ßu ti√™n
}

// H√†m thi·∫øt l·∫≠p c√¢u h·ªèi ti·∫øp theo
function setNextQuestion() {
  resetState(); // ƒê·∫∑t l·∫°i tr·∫°ng th√°i tr∆∞·ªõc khi hi·ªÉn th·ªã c√¢u h·ªèi m·ªõi

  // If we've used all questions, shuffle used questions back into available pool
  if (availableQuestions.length === 0) {
    availableQuestions = [...usedQuestions];
    usedQuestions = [];
  }

  // Get random question from available pool
  const randomIndex = Math.floor(Math.random() * availableQuestions.length);
  const nextQuestion = availableQuestions[randomIndex];

  // Move question from available to used pool
  availableQuestions.splice(randomIndex, 1);
  usedQuestions.push(nextQuestion);

  showQuestion(nextQuestion); // Hi·ªÉn th·ªã c√¢u h·ªèi m·ªõi
}

// H√†m hi·ªÉn th·ªã c√¢u h·ªèi v√† c√°c l·ª±a ch·ªçn tr·∫£ l·ªùi
function showQuestion(question) {
  questionElement.innerText = question.question; // Hi·ªÉn th·ªã c√¢u h·ªèi g·ªëc
  translatedQuestionElement.classList.add("hide"); // ·∫®n b·∫£n d·ªãch ban ƒë·∫ßu
  translatedQuestionElement.innerText = ""; // X√≥a n·ªôi dung b·∫£n d·ªãch c≈©

  // Determine if question has multiple correct answers
  const multiCorrect = question.answers.filter((a) => a.correct).length > 1;

  question.answers.forEach((answer, index) => {
    const button = document.createElement("button");
    const option = String.fromCharCode(97 + index); // Convert 0,1,2,3 to a,b,c,d
    button.innerText = `${option}. ${answer.text}`; // Th√™m a,b,c,d v√†o tr∆∞·ªõc c√¢u tr·∫£ l·ªùi
    button.classList.add("btn");
    // store correctness on the button (string "true" / undefined)
    if (answer.correct) button.dataset.correct = answer.correct;
    // For multi-correct allow toggling selection; for single-correct still allow selection but treat on confirm
    button.addEventListener("click", (e) =>
      toggleSelectAnswer(e, multiCorrect)
    );
    answerButtonsElement.appendChild(button); // Th√™m n√∫t v√†o v√πng ch·ª©a
  });

  // Hide confirm until a selection is made
  confirmButton.classList.add("hide");
}

// H√†m ƒë·∫∑t l·∫°i tr·∫°ng th√°i ·ª©ng d·ª•ng
function resetState() {
  clearStatusClass(document.body); // X√≥a tr·∫°ng th√°i ƒë√∫ng/sai tr√™n body
  nextButton.classList.add("hide"); // ·∫®n n√∫t Next
  confirmButton.classList.add("hide");

  // ·∫®N C·∫¢ B·∫¢N D·ªäCH C√ÇU H·ªéI V√Ä C√ÇU TR·∫¢ L·ªúI KHI ƒêI ƒê·∫æN C√ÇU H·ªéI M·ªöI
  translatedQuestionElement.classList.add("hide");
  translatedQuestionElement.innerText = "";
  translatedAnswersElement.classList.add("hide");
  translatedAnswersElement.innerText = "";

  // X√≥a h·ªôp k·∫øt qu·∫£ cu·ªëi c√πng n·∫øu c√≥
  const resultBox = questionContainerElement.querySelector(
    'div[style*="pre-line"]'
  );
  if (resultBox) {
    questionContainerElement.removeChild(resultBox);
  }

  // X√≥a t·∫•t c·∫£ c√°c n√∫t tr·∫£ l·ªùi c≈©
  while (answerButtonsElement.firstChild) {
    answerButtonsElement.removeChild(answerButtonsElement.firstChild);
  }
}

// H√†m x·ª≠ l√Ω khi ng∆∞·ªùi d√πng ch·ªçn c√¢u tr·∫£ l·ªùi
// Toggle selection state for an answer button
function toggleSelectAnswer(e, multiCorrect) {
  const button = e.target;
  // If question is single-correct, behave like selecting one option (toggle selection but deselect others)
  if (!multiCorrect) {
    // Deselect other buttons
    Array.from(answerButtonsElement.children).forEach((b) => {
      if (b !== button) b.classList.remove("selected");
    });
    // Toggle this one
    button.classList.toggle("selected");
  } else {
    // Multiple corrects: just toggle this button
    button.classList.toggle("selected");
  }

  // Show confirm button if any selected
  const anySelected = Array.from(answerButtonsElement.children).some((b) =>
    b.classList.contains("selected")
  );
  if (anySelected) confirmButton.classList.remove("hide");
  else confirmButton.classList.add("hide");
}

// Evaluate selected answers when user clicks Confirm
confirmButton.addEventListener("click", () => {
  totalQuestions++; // TƒÉng s·ªë c√¢u h·ªèi ƒë√£ tr·∫£ l·ªùi

  // Disable further selection by disabling the buttons (removing ability to click)
  Array.from(answerButtonsElement.children).forEach((b) => {
    b.disabled = true;
    b.setAttribute("aria-disabled", "true");
    // Remove selected cursor and tabindex
    b.tabIndex = -1;
  });

  // Only show checkmark for correct answers
  const buttons = Array.from(answerButtonsElement.children);
  buttons.forEach((btn) => {
    const isCorrect =
      btn.dataset.correct === "true" || btn.dataset.correct === true;

    // Show checkmark next to correct answers only
    if (isCorrect) {
      btn.classList.add("correct"); // Add checkmark
    }
  }); // Set body status: correct only if user selected exactly all correct answers and no incorrect ones
  const correctButtons = buttons.filter(
    (b) => b.dataset.correct === "true" || b.dataset.correct === true
  );
  const selectedButtons = buttons.filter((b) =>
    b.classList.contains("selected")
  );

  const selectedIsExactlyCorrect =
    selectedButtons.length === correctButtons.length &&
    selectedButtons.every(
      (b) => b.dataset.correct === "true" || b.dataset.correct === true
    );

  // TƒÉng ƒëi·ªÉm n·∫øu tr·∫£ l·ªùi ƒë√∫ng
  if (selectedIsExactlyCorrect) {
    score++;
  }

  setStatusClass(document.body, selectedIsExactlyCorrect);

  // After evaluation, hide confirm and show next/restart
  confirmButton.classList.add("hide");
  if (availableQuestions.length > 0) {
    nextButton.classList.remove("hide");
  } else {
    // ·∫®n ph·∫ßn c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi
    questionElement.classList.add("hide");
    answerButtonsElement.classList.add("hide");
    translatedQuestionElement.classList.add("hide");
    translatedAnswersElement.classList.add("hide");

    // Hi·ªÉn th·ªã k·∫øt qu·∫£ cu·ªëi c√πng
    const finalScore = Math.round((score / totalQuestions) * 100);
    const resultMessage = `
      üéØ K·∫øt qu·∫£ b√†i thi c·ªßa b·∫°n:
      ‚úÖ S·ªë c√¢u ƒë√∫ng: ${score}/${totalQuestions}
      üìä T·ª∑ l·ªá ƒë√∫ng: ${finalScore}%
      ${
        finalScore >= 70
          ? "üéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ v∆∞·ª£t qua b√†i thi!"
          : "üí™ C·ªë g·∫Øng h∆°n v√†o l·∫ßn sau nh√©!"
      }
    `;

    // T·∫°o v√† hi·ªÉn th·ªã h·ªôp k·∫øt qu·∫£
    const resultBox = document.createElement("div");
    resultBox.style.backgroundColor = "#f8f9fa";
    resultBox.style.padding = "20px";
    resultBox.style.borderRadius = "10px";
    resultBox.style.marginTop = "20px";
    resultBox.style.boxShadow = "0 2px 5px rgba(0,0,0,0.1)";
    resultBox.style.whiteSpace = "pre-line";
    resultBox.style.textAlign = "center";
    resultBox.style.fontSize = "1.2em";
    resultBox.textContent = resultMessage;

    // Th√™m h·ªôp k·∫øt qu·∫£ v√†o tr∆∞·ªõc n√∫t Start
    questionContainerElement.appendChild(resultBox);

    startButton.innerText = "L√†m l·∫°i b√†i thi";
    startButton.classList.remove("hide");
    translateButton.classList.add("hide");
  }
});

// H√†m ƒë·∫∑t l·ªõp CSS tr·∫°ng th√°i (ƒë√∫ng/sai)
function setStatusClass(element, correct) {
  clearStatusClass(element); // X√≥a c√°c l·ªõp tr·∫°ng th√°i c≈©
  if (correct) {
    element.classList.add("correct"); // Th√™m l·ªõp 'correct' n·∫øu ƒë√∫ng
  } else {
    element.classList.add("wrong"); // Th√™m l·ªõp 'wrong' n·∫øu sai
  }
}

// H√†m x√≥a c√°c l·ªõp CSS tr·∫°ng th√°i
function clearStatusClass(element) {
  element.classList.remove("correct");
  element.classList.remove("wrong");
}

// --- H√†m b·∫≠t/t·∫Øt b·∫£n d·ªãch ---
function toggleTranslation() {
  // Get current question from usedQuestions array since it contains the current question
  const currentQuestion = usedQuestions[usedQuestions.length - 1];

  // Ki·ªÉm tra xem c√≥ c√¢u h·ªèi hi·ªán t·∫°i v√† b·∫£n d·ªãch ti·∫øng Vi·ªát kh√¥ng
  if (
    !currentQuestion ||
    !currentQuestion.translation ||
    !currentQuestion.translation.vi
  ) {
    translatedQuestionElement.innerText = "Kh√¥ng c√≥ b·∫£n d·ªãch cho c√¢u h·ªèi n√†y.";
    translatedQuestionElement.classList.remove("hide");
    translatedAnswersElement.classList.add("hide"); // ·∫®n b·∫£n d·ªãch c√¢u tr·∫£ l·ªùi n·∫øu kh√¥ng c√≥ b·∫£n d·ªãch c√¢u h·ªèi
    translatedAnswersElement.innerText = "";
    return;
  }

  // N·∫øu b·∫£n d·ªãch ƒëang ·∫©n (c·∫£ c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi)
  if (translatedQuestionElement.classList.contains("hide")) {
    // HI·ªÇN TH·ªä B·∫¢N D·ªäCH C√ÇU H·ªéI
    translatedQuestionElement.innerText = `(C√¢u h·ªèi d·ªãch): ${currentQuestion.translation.vi}`;
    translatedQuestionElement.classList.remove("hide");

    // HI·ªÇN TH·ªä B·∫¢N D·ªäCH C√ÅC C√ÇU TR·∫¢ L·ªúI
    const translatedAnswers = currentQuestion.answers.map((answer, index) => {
      // Th√™m ch·ªØ c√°i a, b, c, d v√†o tr∆∞·ªõc m·ªói c√¢u tr·∫£ l·ªùi
      const option = String.fromCharCode(97 + index); // Convert 0,1,2,3 to a,b,c,d
      const translatedText =
        answer.translation && answer.translation.vi
          ? answer.translation.vi
          : answer.text;
      return `${option}. ${translatedText}`;
    });
    // *** THAY ƒê·ªîI D√íNG N√ÄY ***
    translatedAnswersElement.innerHTML = `(ƒê√°p √°n d·ªãch):<br>${translatedAnswers.join(
      "<br>"
    )}`; // N·ªëi c√°c b·∫£n d·ªãch b·∫±ng th·∫ª <br>
    translatedAnswersElement.classList.remove("hide");
  } else {
    // N·∫øu b·∫£n d·ªãch ƒëang hi·ªÉn th·ªã, ·∫®N C·∫¢ C√ÇU H·ªéI V√Ä C√ÇU TR·∫¢ L·ªúI
    translatedQuestionElement.classList.add("hide");
    translatedQuestionElement.innerText = "";
    translatedAnswersElement.classList.add("hide");
    translatedAnswersElement.innerText = "";
  }
}

// M·∫£ng ch·ª©a c√°c c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi ƒë√£ bao g·ªìm b·∫£n d·ªãch
const questions = [
  {
    question:
      "The Agile Manifesto has four core values. Match the Agile value on the left (1-4) with its traditional counterpart on the right (i-iv). \n\n1) Customer collaboration over\n2) Responding to change over\n3) Individuals and interactions over\n4) Working software over\n\ni) processes and tools\nii) following a plan\niii) contract negotiation\niv) comprehensive documentation",
    translation: {
      vi: "B·∫£n Tuy√™n ng√¥n Agile (Agile Manifesto) c√≥ 4 gi√° tr·ªã c·ªët l√µi. H√£y gh√©p gi√° tr·ªã Agile ·ªü c·ªôt b√™n tr√°i (1-4) v·ªõi ƒë·ªëi tr·ªçng truy·ªÅn th·ªëng c·ªßa n√≥ ·ªü c·ªôt b√™n ph·∫£i (i-iv).\n\n1) H·ª£p t√°c v·ªõi kh√°ch h√†ng quan tr·ªçng h∆°n\n2) Ph·∫£n h·ªìi v·ªõi thay ƒë·ªïi quan tr·ªçng h∆°n\n3) C√° nh√¢n v√† t∆∞∆°ng t√°c quan tr·ªçng h∆°n\n4) Ph·∫ßn m·ªÅm ho·∫°t ƒë·ªông t·ªët quan tr·ªçng h∆°n\n\ni) quy tr√¨nh v√† c√¥ng c·ª•\nii) tu√¢n th·ªß m·ªôt k·∫ø ho·∫°ch\niii) ƒë√†m ph√°n h·ª£p ƒë·ªìng\niv) t√†i li·ªáu to√†n di·ªán",
    },
    answers: [
      {
        text: "1-iii, 2-iv, 3-ii, 4-i",
        correct: false,
        translation: {
          vi: "1-iii, 2-iv, 3-ii, 4-i",
        },
      },
      {
        text: "1-iii, 2-ii, 3-i, 4-iv",
        correct: true,
        translation: {
          vi: "1-iii, 2-ii, 3-i, 4-iv",
        },
      },
      {
        text: "1-iv, 2-ii, 3-i, 4-iii",
        correct: false,
        translation: {
          vi: "1-iv, 2-ii, 3-i, 4-iii",
        },
      },
      {
        text: "1-ii, 2-iii, 3-iv, 4-i",
        correct: false,
        translation: {
          vi: "1-ii, 2-iii, 3-iv, 4-i",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is one of the twelve principles of the Agile Manifesto?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt trong m∆∞·ªùi hai nguy√™n t·∫Øc c·ªßa B·∫£n Tuy√™n ng√¥n Agile (Agile Manifesto)?",
    },
    answers: [
      {
        text: "Working software is the primary measure of progress.",
        correct: true,
        translation: {
          vi: "Ph·∫ßn m·ªÅm ho·∫°t ƒë·ªông l√† th∆∞·ªõc ƒëo ch√≠nh c·ªßa ti·∫øn ƒë·ªô.",
        },
      },
      {
        text: "The most efficient and effective method of conveying information to and within a development team is via comprehensive documentation.",
        correct: false,
        translation: {
          vi: "Ph∆∞∆°ng ph√°p truy·ªÅn ƒë·∫°t th√¥ng tin hi·ªáu qu·∫£ nh·∫•t trong ƒë·ªôi ph√°t tri·ªÉn l√† th√¥ng qua t√†i li·ªáu to√†n di·ªán.",
        },
      },
      {
        text: "Continuous attention to excellent technical design and good design enhances business value.",
        correct: false,
        translation: {
          vi: "Li√™n t·ª•c ch√∫ √Ω ƒë·∫øn thi·∫øt k·∫ø k·ªπ thu·∫≠t xu·∫•t s·∫Øc v√† thi·∫øt k·∫ø t·ªët gi√∫p tƒÉng c∆∞·ªùng gi√° tr·ªã kinh doanh.",
        },
      },
      {
        text: "Agile processes harness change for the customer's competitive advantage.",
        correct: false,
        translation: {
          vi: "C√°c quy tr√¨nh Agile t·∫≠n d·ª•ng s·ª± thay ƒë·ªïi ƒë·ªÉ t·∫°o l·ª£i th·∫ø c·∫°nh tranh cho kh√°ch h√†ng.",
        },
      },
    ],
  },
  {
    question:
      "According to the Agile Manifesto, what is the most efficient and effective method of conveying information to and within a development team?",
    translation: {
      vi: "Theo B·∫£n Tuy√™n ng√¥n Agile, ph∆∞∆°ng ph√°p truy·ªÅn ƒë·∫°t th√¥ng tin hi·ªáu qu·∫£ nh·∫•t trong v√† ngo√†i ƒë·ªôi ph√°t tri·ªÉn l√† g√¨?",
    },
    answers: [
      {
        text: "Comprehensive documentation",
        correct: false,
        translation: {
          vi: "T√†i li·ªáu to√†n di·ªán",
        },
      },
      {
        text: "Pair programming",
        correct: false,
        translation: {
          vi: "L·∫≠p tr√¨nh c·∫∑p ƒë√¥i (Pair programming)",
        },
      },
      {
        text: "Face-to-face conversation",
        correct: true,
        translation: {
          vi: "Tr√≤ chuy·ªán tr·ª±c ti·∫øp (Face-to-face conversation)",
        },
      },
      {
        text: "Automated test cases",
        correct: false,
        translation: {
          vi: "C√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ t·ª± ƒë·ªông (Automated test cases)",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is an advantage of having the whole team take responsibility for quality?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt l·ª£i th·∫ø c·ªßa vi·ªác to√†n b·ªô nh√≥m (whole team) ch·ªãu tr√°ch nhi·ªám v·ªÅ ch·∫•t l∆∞·ª£ng?",
    },
    answers: [
      {
        text: "Companies no longer need to hire and train software testing specialists",
        correct: false,
        translation: {
          vi: "C√°c c√¥ng ty kh√¥ng c·∫ßn tuy·ªÉn d·ª•ng v√† ƒë√†o t·∫°o chuy√™n gia ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm n·ªØa",
        },
      },
      {
        text: "Test automation tasks are now the responsibility of the development team instead of the testing team",
        correct: false,
        translation: {
          vi: "C√°c nhi·ªám v·ª• t·ª± ƒë·ªông h√≥a ki·ªÉm th·ª≠ gi·ªù ƒë√¢y l√† tr√°ch nhi·ªám c·ªßa nh√≥m ph√°t tri·ªÉn thay v√¨ nh√≥m ki·ªÉm th·ª≠",
        },
      },
      {
        text: "Role barriers are removed, and team members contribute to project success based on their unique skills and perspectives",
        correct: true,
        translation: {
          vi: "R√†o c·∫£n vai tr√≤ ƒë∆∞·ª£c lo·∫°i b·ªè, v√† c√°c th√†nh vi√™n trong nh√≥m ƒë√≥ng g√≥p v√†o th√†nh c√¥ng c·ªßa d·ª± √°n d·ª±a tr√™n c√°c k·ªπ nƒÉng v√† quan ƒëi·ªÉm ƒë·ªôc ƒë√°o c·ªßa h·ªç",
        },
      },
      {
        text: "Project costs are lower as there is no need for a dedicated testing team",
        correct: false,
        translation: {
          vi: "Chi ph√≠ d·ª± √°n th·∫•p h∆°n v√¨ kh√¥ng c·∫ßn ƒë·∫øn m·ªôt nh√≥m ki·ªÉm th·ª≠ chuy√™n bi·ªát",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a benefit of collaboration and active stakeholder participation in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† l·ª£i √≠ch c·ªßa s·ª± h·ª£p t√°c v√† s·ª± tham gia t√≠ch c·ª±c c·ªßa c√°c b√™n li√™n quan trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "A reduction in the time needed to develop the business case for the project.",
        correct: false,
        translation: {
          vi: "Gi·∫£m th·ªùi gian c·∫ßn thi·∫øt ƒë·ªÉ ph√°t tri·ªÉn b·∫£n k·∫ø ho·∫°ch kinh doanh cho d·ª± √°n.",
        },
      },
      {
        text: "An increase in the likelihood that the developed software will be fit for purpose.",
        correct: true,
        translation: {
          vi: "TƒÉng kh·∫£ nƒÉng ph·∫ßn m·ªÅm ƒë∆∞·ª£c ph√°t tri·ªÉn s·∫Ω ph√π h·ª£p v·ªõi m·ª•c ƒë√≠ch s·ª≠ d·ª•ng.",
        },
      },
      {
        text: "An improvement in the overall test process.",
        correct: false,
        translation: {
          vi: "C·∫£i thi·ªán quy tr√¨nh ki·ªÉm th·ª≠ t·ªïng th·ªÉ.",
        },
      },
      {
        text: "A reduction in the time needed to estimate the cost of the project.",
        correct: false,
        translation: {
          vi: "Gi·∫£m th·ªùi gian c·∫ßn thi·∫øt ƒë·ªÉ ∆∞·ªõc t√≠nh chi ph√≠ c·ªßa d·ª± √°n.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is an example of 'Sustainable development' in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt v√≠ d·ª• v·ªÅ 'Ph√°t tri·ªÉn b·ªÅn v·ªØng' trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "Ensuring the system is environmentally friendly.",
        correct: false,
        translation: {
          vi: "ƒê·∫£m b·∫£o h·ªá th·ªëng th√¢n thi·ªán v·ªõi m√¥i tr∆∞·ªùng.",
        },
      },
      {
        text: "Ensuring the Product Owner has a maximum capacity for work.",
        correct: false,
        translation: {
          vi: "ƒê·∫£m b·∫£o Product Owner c√≥ c√¥ng su·∫•t l√†m vi·ªác t·ªëi ƒëa.",
        },
      },
      {
        text: "Ensuring the team is able to maintain a constant pace indefinitely.",
        correct: true,
        translation: {
          vi: "ƒê·∫£m b·∫£o nh√≥m c√≥ th·ªÉ duy tr√¨ t·ªëc ƒë·ªô ·ªïn ƒë·ªãnh v√¥ th·ªùi h·∫°n.",
        },
      },
      {
        text: "Ensuring the project maintains a constant level of technical debt.",
        correct: false,
        translation: {
          vi: "ƒê·∫£m b·∫£o d·ª± √°n duy tr√¨ m·ª©c n·ª£ k·ªπ thu·∫≠t (technical debt) kh√¥ng ƒë·ªïi.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a good reason for a tester to attend the Daily Standup?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† l√Ω do ch√≠nh ƒë√°ng ƒë·ªÉ m·ªôt tester tham gia cu·ªôc h·ªçp Daily Standup?",
    },
    answers: [
      {
        text: "To report which test cases were passed and which failed on the previous day.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ b√°o c√°o tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ n√†o ƒë√£ qua v√† tr∆∞·ªùng h·ª£p n√†o th·∫•t b·∫°i v√†o ng√†y h√¥m tr∆∞·ªõc.",
        },
      },
      {
        text: "To find out if any of the User Stories are suitable for acceptance testing on the current day.",
        correct: true,
        translation: {
          vi: "ƒê·ªÉ t√¨m hi·ªÉu xem c√≥ User Story n√†o ph√π h·ª£p cho vi·ªác ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n (acceptance testing) trong ng√†y hi·ªán t·∫°i hay kh√¥ng.",
        },
      },
      {
        text: "To ask the Product Owner what to test next.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ h·ªèi Product Owner n√™n ki·ªÉm th·ª≠ c√°i g√¨ ti·∫øp theo.",
        },
      },
      {
        text: "To check if any of the other team members can help them with their assigned testing tasks.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ ki·ªÉm tra xem c√≥ th√†nh vi√™n n√†o kh√°c trong nh√≥m c√≥ th·ªÉ gi√∫p h·ªç v·ªõi c√°c nhi·ªám v·ª• ki·ªÉm th·ª≠ ƒë∆∞·ª£c giao hay kh√¥ng.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following characteristics best describes the role of an Agile team member?",
    translation: {
      vi: "ƒê·∫∑c ƒëi·ªÉm n√†o sau ƒë√¢y m√¥ t·∫£ t·ªët nh·∫•t vai tr√≤ c·ªßa m·ªôt th√†nh vi√™n trong nh√≥m Agile?",
    },
    answers: [
      {
        text: "A specialist focused on only one type of task, such as only design or only testing.",
        correct: false,
        translation: {
          vi: "M·ªôt chuy√™n gia ch·ªâ t·∫≠p trung v√†o m·ªôt lo·∫°i nhi·ªám v·ª• duy nh·∫•t, v√≠ d·ª• nh∆∞ ch·ªâ thi·∫øt k·∫ø ho·∫∑c ch·ªâ ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "A person who is adaptable, collaborative, and takes responsibility for quality.",
        correct: true,
        translation: {
          vi: "M·ªôt ng∆∞·ªùi d·ªÖ th√≠ch nghi, h·ª£p t√°c v√† ch·ªãu tr√°ch nhi·ªám v·ªÅ ch·∫•t l∆∞·ª£ng.",
        },
      },
      {
        text: "A generalist who may do a variety of tasks, but whose main focus is documentation.",
        correct: false,
        translation: {
          vi: "M·ªôt ng∆∞·ªùi t·ªïng qu√°t c√≥ th·ªÉ l√†m nhi·ªÅu lo·∫°i nhi·ªám v·ª•, nh∆∞ng tr·ªçng t√¢m ch√≠nh l√† t√†i li·ªáu.",
        },
      },
      {
        text: "A multi-skilled person who can quickly adapt to working independently on any task.",
        correct: false,
        translation: {
          vi: "M·ªôt ng∆∞·ªùi ƒëa k·ªπ nƒÉng c√≥ th·ªÉ nhanh ch√≥ng th√≠ch nghi ƒë·ªÉ l√†m vi·ªác ƒë·ªôc l·∫≠p v·ªõi b·∫•t k·ª≥ nhi·ªám v·ª• n√†o.",
        },
      },
    ],
  },
  {
    question:
      "During an iteration planning meeting, the team is sharing ideas about a User Story. The Product Owner recommends that the customer should have a single screen to enter information. A developer explains that there are technical constraints for this feature, given the amount of information that needs to be collected on the screen. Another developer states there is a performance risk because the information will be stored in an external database.\n\nWhich of the following contributions would best represent the role of the tester in this discussion?",
    translation: {
      vi: "Trong m·ªôt cu·ªôc h·ªçp l·∫≠p k·∫ø ho·∫°ch v√≤ng l·∫∑p (iteration planning meeting), nh√≥m ƒëang chia s·∫ª √Ω ki·∫øn v·ªÅ m·ªôt User Story. Product Owner khuy√™n r·∫±ng kh√°ch h√†ng n√™n c√≥ m·ªôt m√†n h√¨nh duy nh·∫•t ƒë·ªÉ nh·∫≠p th√¥ng tin. Nh√† ph√°t tri·ªÉn gi·∫£i th√≠ch r·∫±ng c√≥ nh·ªØng h·∫°n ch·∫ø k·ªπ thu·∫≠t ƒë·ªëi v·ªõi t√≠nh nƒÉng n√†y, do l∆∞·ª£ng th√¥ng tin c·∫ßn thu th·∫≠p tr√™n m√†n h√¨nh. M·ªôt nh√† ph√°t tri·ªÉn kh√°c cho bi·∫øt c√≥ r·ªßi ro v·ªÅ hi·ªáu su·∫•t v√¨ th√¥ng tin s·∫Ω ƒë∆∞·ª£c l∆∞u tr·ªØ trong m·ªôt c∆° s·ªü d·ªØ li·ªáu b√™n ngo√†i.\n\nƒê√≥ng g√≥p n√†o sau ƒë√¢y s·∫Ω ƒë·∫°i di·ªán t·ªët nh·∫•t cho vai tr√≤ c·ªßa tester trong cu·ªôc th·∫£o lu·∫≠n n√†y?",
    },
    answers: [
      {
        text: "The tester recommends that the screen for the User Story needs to be a single page to reduce the test automation effort.",
        correct: false,
        translation: {
          vi: "Tester khuy√™n r·∫±ng m√†n h√¨nh cho User Story c·∫ßn ph·∫£i l√† m·ªôt trang duy nh·∫•t ƒë·ªÉ gi·∫£m n·ªó l·ª±c t·ª± ƒë·ªông h√≥a ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "The tester recommends that usability is more important than performance.",
        correct: false,
        translation: {
          vi: "Tester khuy√™n r·∫±ng kh·∫£ nƒÉng s·ª≠ d·ª•ng (usability) quan tr·ªçng h∆°n hi·ªáu su·∫•t (performance).",
        },
      },
      {
        text: "The tester recommends that the performance acceptance criteria should be a maximum of 1 second to store the data.",
        correct: false,
        translation: {
          vi: "Tester khuy√™n r·∫±ng ti√™u ch√≠ ch·∫•p nh·∫≠n v·ªÅ hi·ªáu su·∫•t n√™n l√† t·ªëi ƒëa 1 gi√¢y ƒë·ªÉ l∆∞u tr·ªØ d·ªØ li·ªáu.",
        },
      },
      {
        text: "The tester recommends that the User Story needs to have testable acceptance criteria.",
        correct: true,
        translation: {
          vi: "Tester khuy√™n r·∫±ng User Story c·∫ßn c√≥ ti√™u ch√≠ ch·∫•p nh·∫≠n (acceptance criteria) ƒë·ªÉ c√≥ th·ªÉ ki·ªÉm th·ª≠ ƒë∆∞·ª£c.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a common challenge for testers in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt th√°ch th·ª©c ph·ªï bi·∫øn ƒë·ªëi v·ªõi c√°c tester trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "Testers are only involved in acceptance testing, which limits their understanding of the user story.",
        correct: false,
        translation: {
          vi: "Tester ch·ªâ tham gia v√†o ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n, ƒëi·ªÅu n√†y gi·ªõi h·∫°n s·ª± hi·ªÉu bi·∫øt c·ªßa h·ªç v·ªÅ c√¢u chuy·ªán ng∆∞·ªùi d√πng (user story).",
        },
      },
      {
        text: "Testers can be under pressure to complete testing within a short iteration/sprint.",
        correct: true,
        translation: {
          vi: "Tester c√≥ th·ªÉ ch·ªãu √°p l·ª±c ph·∫£i ho√†n th√†nh ki·ªÉm th·ª≠ trong m·ªôt v√≤ng l·∫∑p/sprint ng·∫Øn.",
        },
      },
      {
        text: "Testers are unable to participate in requirements-related activities.",
        correct: false,
        translation: {
          vi: "Tester kh√¥ng th·ªÉ tham gia v√†o c√°c ho·∫°t ƒë·ªông li√™n quan ƒë·∫øn y√™u c·∫ßu.",
        },
      },
      {
        text: "Testers must focus their attention only on technical testing.",
        correct: false,
        translation: {
          vi: "Tester ph·∫£i t·∫≠p trung s·ª± ch√∫ √Ω c·ªßa h·ªç ch·ªâ v√†o ki·ªÉm th·ª≠ k·ªπ thu·∫≠t.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following activities performed by an Agile tester would best support the principle of 'self-organizing teams'?",
    translation: {
      vi: "Ho·∫°t ƒë·ªông n√†o sau ƒë√¢y ƒë∆∞·ª£c th·ª±c hi·ªán b·ªüi m·ªôt tester Agile s·∫Ω h·ªó tr·ª£ t·ªët nh·∫•t cho nguy√™n t·∫Øc 'nh√≥m t·ª± t·ªï ch·ª©c'?",
    },
    answers: [
      {
        text: "Communicating test progress during the daily stand-up.",
        correct: false,
        translation: {
          vi: "Th√¥ng b√°o ti·∫øn ƒë·ªô ki·ªÉm th·ª≠ trong cu·ªôc h·ªçp h√†ng ng√†y (daily stand-up).",
        },
      },
      {
        text: "Prioritizing the tester's own work for the iteration.",
        correct: true,
        translation: {
          vi: "T·ª± ∆∞u ti√™n c√¥ng vi·ªác c·ªßa tester cho v√≤ng l·∫∑p (iteration).",
        },
      },
      {
        text: "Recommending an architectural change to the team during a sprint review.",
        correct: false,
        translation: {
          vi: "ƒê·ªÅ xu·∫•t thay ƒë·ªïi ki·∫øn tr√∫c cho nh√≥m trong bu·ªïi ƒë√°nh gi√° sprint (sprint review).",
        },
      },
      {
        text: "Reporting testing effort metrics for the sprint to the Project Manager.",
        correct: false,
        translation: {
          vi: "B√°o c√°o s·ªë li·ªáu n·ªó l·ª±c ki·ªÉm th·ª≠ (testing effort metrics) c·ªßa sprint cho Qu·∫£n l√Ω D·ª± √°n (Project Manager).",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a primary characteristic of a Retrospective?",
    translation: {
      vi: "ƒê·∫∑c ƒëi·ªÉm ch√≠nh n√†o sau ƒë√¢y m√¥ t·∫£ v·ªÅ cu·ªôc h·ªçp H·ªìi t∆∞·ªüng (Retrospective)?",
    },
    answers: [
      {
        text: "Stakeholders review and formally accept the tested features.",
        correct: false,
        translation: {
          vi: "C√°c b√™n li√™n quan ƒë√°nh gi√° v√† ch·∫•p nh·∫≠n ch√≠nh th·ª©c c√°c t√≠nh nƒÉng ƒë√£ ƒë∆∞·ª£c ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "The team discusses how to adapt the development process.",
        correct: true,
        translation: {
          vi: "Nh√≥m th·∫£o lu·∫≠n v·ªÅ c√°ch ƒëi·ªÅu ch·ªânh quy tr√¨nh ph√°t tri·ªÉn.",
        },
      },
      {
        text: "The team estimates the effort required for the next iteration.",
        correct: false,
        translation: {
          vi: "Nh√≥m ∆∞·ªõc t√≠nh n·ªó l·ª±c c·∫ßn thi·∫øt cho v√≤ng l·∫∑p ti·∫øp theo.",
        },
      },
      {
        text: "Individual team members review their own performance and set improvement goals.",
        correct: false,
        translation: {
          vi: "C√°c th√†nh vi√™n nh√≥m c√° nh√¢n xem x√©t hi·ªáu su·∫•t c·ªßa b·∫£n th√¢n v√† ƒë·∫∑t m·ª•c ti√™u c·∫£i thi·ªán.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is an effective technique for an Agile tester to use when communicating a defect report to a developer?",
    translation: {
      vi: "K·ªπ thu·∫≠t n√†o sau ƒë√¢y l√† hi·ªáu qu·∫£ ƒë·ªÉ m·ªôt tester Agile s·ª≠ d·ª•ng khi truy·ªÅn ƒë·∫°t b√°o c√°o l·ªói (defect report) cho m·ªôt developer?",
    },
    answers: [
      {
        text: "Avoid using technical language to ensure the developer understands the context of the defect.",
        correct: false,
        translation: {
          vi: "Tr√°nh s·ª≠ d·ª•ng ng√¥n ng·ªØ k·ªπ thu·∫≠t ƒë·ªÉ ƒë·∫£m b·∫£o developer hi·ªÉu ƒë∆∞·ª£c ng·ªØ c·∫£nh c·ªßa l·ªói.",
        },
      },
      {
        text: "Explain the expected behavior and observed behavior in a clear, concise, and non-judgmental way.",
        correct: true,
        translation: {
          vi: "Gi·∫£i th√≠ch h√†nh vi mong ƒë·ª£i v√† h√†nh vi quan s√°t ƒë∆∞·ª£c m·ªôt c√°ch r√µ r√†ng, s√∫c t√≠ch v√† kh√¥ng ph√°n x√©t.",
        },
      },
      {
        text: "Suggest the best way for the developer to fix the defect.",
        correct: false,
        translation: {
          vi: "ƒê·ªÅ xu·∫•t c√°ch t·ªët nh·∫•t ƒë·ªÉ developer kh·∫Øc ph·ª•c l·ªói.",
        },
      },
      {
        text: "Create an automated test case that demonstrates the defect and provide this to the developer.",
        correct: false,
        translation: {
          vi: "T·∫°o m·ªôt tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ t·ª± ƒë·ªông th·ªÉ hi·ªán l·ªói v√† cung c·∫•p cho developer.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following describes the purpose of a Sprint Review?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y m√¥ t·∫£ m·ª•c ƒë√≠ch c·ªßa Bu·ªïi ƒê√°nh gi√° Sprint (Sprint Review)?",
    },
    answers: [
      {
        text: "To allow the Product Owner to inspect the Product Backlog and adjust it based on feedback.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ cho ph√©p Product Owner ki·ªÉm tra Product Backlog v√† ƒëi·ªÅu ch·ªânh d·ª±a tr√™n ph·∫£n h·ªìi.",
        },
      },
      {
        text: "To allow the team to present the completed work (increment) to the stakeholders for inspection and feedback.",
        correct: true,
        translation: {
          vi: "ƒê·ªÉ cho ph√©p nh√≥m tr√¨nh b√†y c√¥ng vi·ªác ƒë√£ ho√†n th√†nh (increment) cho c√°c b√™n li√™n quan ki·ªÉm tra v√† ƒë∆∞a ra ph·∫£n h·ªìi.",
        },
      },
      {
        text: "To identify improvements to the way the team works.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ x√°c ƒë·ªãnh c√°c c·∫£i ti·∫øn cho c√°ch l√†m vi·ªác c·ªßa nh√≥m.",
        },
      },
      {
        text: "To allow the team to plan the work for the next Sprint.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ cho ph√©p nh√≥m l·∫≠p k·∫ø ho·∫°ch c√¥ng vi·ªác cho Sprint ti·∫øp theo.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a common practice in a Kanban project that helps with managing flow?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt th·ª±c h√†nh ph·ªï bi·∫øn trong d·ª± √°n Kanban gi√∫p qu·∫£n l√Ω lu·ªìng c√¥ng vi·ªác (flow)?",
    },
    answers: [
      {
        text: "Maintaining a time-boxed iteration length, such as two weeks.",
        correct: false,
        translation: {
          vi: "Duy tr√¨ ƒë·ªô d√†i v√≤ng l·∫∑p c√≥ gi·ªõi h·∫°n th·ªùi gian (time-boxed), v√≠ d·ª• hai tu·∫ßn.",
        },
      },
      {
        text: "Limiting the Work-In-Progress (WIP) on the board.",
        correct: true,
        translation: {
          vi: "Gi·ªõi h·∫°n C√¥ng vi·ªác ƒêang Ti·∫øn h√†nh (WIP) tr√™n b·∫£ng.",
        },
      },
      {
        text: "Prioritizing items in the Product Backlog by Business Value.",
        correct: false,
        translation: {
          vi: "∆Øu ti√™n c√°c m·ª•c trong Product Backlog theo Gi√° tr·ªã Kinh doanh (Business Value).",
        },
      },
      {
        text: "Holding a Daily Scrum to discuss blockers.",
        correct: false,
        translation: {
          vi: "T·ªï ch·ª©c m·ªôt Daily Scrum ƒë·ªÉ th·∫£o lu·∫≠n v·ªÅ c√°c v·∫≠t c·∫£n (blockers).",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is the most important reason for a tester to collaborate closely with the Product Owner?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† l√Ω do quan tr·ªçng nh·∫•t ƒë·ªÉ tester h·ª£p t√°c ch·∫∑t ch·∫Ω v·ªõi Product Owner?",
    },
    answers: [
      {
        text: "To ensure the tester is able to deliver a detailed test plan for the whole project.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ ƒë·∫£m b·∫£o tester c√≥ th·ªÉ cung c·∫•p m·ªôt k·∫ø ho·∫°ch ki·ªÉm th·ª≠ chi ti·∫øt cho to√†n b·ªô d·ª± √°n.",
        },
      },
      {
        text: "To assist with the creation and prioritization of the test backlog.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ h·ªó tr·ª£ vi·ªác t·∫°o v√† ∆∞u ti√™n test backlog.",
        },
      },
      {
        text: "To clarify acceptance criteria and test coverage before development begins.",
        correct: true,
        translation: {
          vi: "ƒê·ªÉ l√†m r√µ ti√™u ch√≠ ch·∫•p nh·∫≠n (acceptance criteria) v√† ph·∫°m vi ki·ªÉm th·ª≠ (test coverage) tr∆∞·ªõc khi qu√° tr√¨nh ph√°t tri·ªÉn b·∫Øt ƒë·∫ßu.",
        },
      },
      {
        text: "To get timely notification of any changes to the project scope.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o k·ªãp th·ªùi v·ªÅ b·∫•t k·ª≥ thay ƒë·ªïi n√†o ƒë·ªëi v·ªõi ph·∫°m vi d·ª± √°n.",
        },
      },
    ],
  },
  {
    question:
      "When working in an Agile team, what is the best way for a tester to ensure that testing is effective?",
    translation: {
      vi: "Khi l√†m vi·ªác trong m·ªôt nh√≥m Agile, c√°ch t·ªët nh·∫•t ƒë·ªÉ tester ƒë·∫£m b·∫£o r·∫±ng vi·ªác ki·ªÉm th·ª≠ l√† hi·ªáu qu·∫£ l√† g√¨?",
    },
    answers: [
      {
        text: "By performing all the testing activities themselves and refusing to accept help from other team members.",
        correct: false,
        translation: {
          vi: "B·∫±ng c√°ch t·ª± m√¨nh th·ª±c hi·ªán t·∫•t c·∫£ c√°c ho·∫°t ƒë·ªông ki·ªÉm th·ª≠ v√† t·ª´ ch·ªëi s·ª± gi√∫p ƒë·ª° t·ª´ c√°c th√†nh vi√™n kh√°c trong nh√≥m.",
        },
      },
      {
        text: "By performing testing activities concurrently with the development activities and collaborating with the whole team.",
        correct: true,
        translation: {
          vi: "B·∫±ng c√°ch th·ª±c hi·ªán c√°c ho·∫°t ƒë·ªông ki·ªÉm th·ª≠ ƒë·ªìng th·ªùi v·ªõi c√°c ho·∫°t ƒë·ªông ph√°t tri·ªÉn v√† h·ª£p t√°c v·ªõi to√†n b·ªô nh√≥m.",
        },
      },
      {
        text: "By maintaining and executing a comprehensive set of regression tests at the end of each sprint.",
        correct: false,
        translation: {
          vi: "B·∫±ng c√°ch duy tr√¨ v√† th·ª±c hi·ªán m·ªôt b·ªô ki·ªÉm th·ª≠ h·ªìi quy (regression tests) to√†n di·ªán v√†o cu·ªëi m·ªói sprint.",
        },
      },
      {
        text: "By ensuring that all test cases are automatically executed before they are handed over to the development team.",
        correct: false,
        translation: {
          vi: "B·∫±ng c√°ch ƒë·∫£m b·∫£o r·∫±ng t·∫•t c·∫£ c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ ƒë∆∞·ª£c t·ª± ƒë·ªông th·ª±c hi·ªán tr∆∞·ªõc khi ch√∫ng ƒë∆∞·ª£c giao cho nh√≥m ph√°t tri·ªÉn.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following test practices is MOST useful for an Agile team to identify defects early?",
    translation: {
      vi: "Th·ª±c h√†nh ki·ªÉm th·ª≠ n√†o sau ƒë√¢y l√† H·ªÆU √çCH NH·∫§T cho m·ªôt nh√≥m Agile ƒë·ªÉ x√°c ƒë·ªãnh l·ªói s·ªõm?",
    },
    answers: [
      {
        text: "Risk-based testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ d·ª±a tr√™n r·ªßi ro (Risk-based testing).",
        },
      },
      {
        text: "Session-based testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ d·ª±a tr√™n phi√™n (Session-based testing).",
        },
      },
      {
        text: "Exploratory testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ thƒÉm d√≤ (Exploratory testing).",
        },
      },
      {
        text: "Reviewing and clarifying requirements.",
        correct: true,
        translation: {
          vi: "Xem x√©t v√† l√†m r√µ c√°c y√™u c·∫ßu (Reviewing and clarifying requirements).",
        },
      },
    ],
  },
  {
    question:
      "How does the role of the tester in an Agile team change compared to a traditional (waterfall) team?",
    translation: {
      vi: "Vai tr√≤ c·ªßa tester trong nh√≥m Agile thay ƒë·ªïi nh∆∞ th·∫ø n√†o so v·ªõi nh√≥m truy·ªÅn th·ªëng (waterfall)?",
    },
    answers: [
      {
        text: "Agile testers are more technical and write more documentation.",
        correct: false,
        translation: {
          vi: "Tester Agile mang t√≠nh k·ªπ thu·∫≠t h∆°n v√† vi·∫øt nhi·ªÅu t√†i li·ªáu h∆°n.",
        },
      },
      {
        text: "Agile testers are responsible for all the testing, including acceptance testing, user acceptance testing, and system testing.",
        correct: false,
        translation: {
          vi: "Tester Agile ch·ªãu tr√°ch nhi·ªám v·ªÅ t·∫•t c·∫£ c√°c lo·∫°i ki·ªÉm th·ª≠, bao g·ªìm ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n, ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n c·ªßa ng∆∞·ªùi d√πng v√† ki·ªÉm th·ª≠ h·ªá th·ªëng.",
        },
      },
      {
        text: "Agile testers are expected to collaborate more, be multi-skilled, and work more frequently with Product Owners and developers.",
        correct: true,
        translation: {
          vi: "Tester Agile ƒë∆∞·ª£c k·ª≥ v·ªçng h·ª£p t√°c nhi·ªÅu h∆°n, ƒëa k·ªπ nƒÉng v√† l√†m vi·ªác th∆∞·ªùng xuy√™n h∆°n v·ªõi Product Owners v√† developers.",
        },
      },
      {
        text: "Agile testers are expected to define the quality of the product and define the 'Definition of Done'.",
        correct: false,
        translation: {
          vi: "Tester Agile ƒë∆∞·ª£c k·ª≥ v·ªçng x√°c ƒë·ªãnh ch·∫•t l∆∞·ª£ng c·ªßa s·∫£n ph·∫©m v√† x√°c ƒë·ªãnh 'ƒê·ªãnh nghƒ©a Ho√†n th√†nh' (Definition of Done).",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a key testing challenge for a tester on a new Agile team that is transitioning from a traditional model?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt th√°ch th·ª©c ki·ªÉm th·ª≠ quan tr·ªçng ƒë·ªëi v·ªõi m·ªôt tester trong m·ªôt nh√≥m Agile m·ªõi ƒëang chuy·ªÉn ƒë·ªïi t·ª´ m√¥ h√¨nh truy·ªÅn th·ªëng?",
    },
    answers: [
      {
        text: "The team will not have enough time to do any exploratory testing.",
        correct: false,
        translation: {
          vi: "Nh√≥m s·∫Ω kh√¥ng c√≥ ƒë·ªß th·ªùi gian ƒë·ªÉ th·ª±c hi·ªán b·∫•t k·ª≥ ki·ªÉm th·ª≠ thƒÉm d√≤ n√†o.",
        },
      },
      {
        text: "The Product Owner will not be available to clarify the acceptance criteria.",
        correct: false,
        translation: {
          vi: "Product Owner s·∫Ω kh√¥ng s·∫µn s√†ng ƒë·ªÉ l√†m r√µ c√°c ti√™u ch√≠ ch·∫•p nh·∫≠n.",
        },
      },
      {
        text: "The developers are not used to testing their own work.",
        correct: true,
        translation: {
          vi: "C√°c developer kh√¥ng quen v·ªõi vi·ªác t·ª± ki·ªÉm th·ª≠ c√¥ng vi·ªác c·ªßa h·ªç.",
        },
      },
      {
        text: "The tester will not be able to design test cases before the code is ready.",
        correct: false,
        translation: {
          vi: "Tester s·∫Ω kh√¥ng th·ªÉ thi·∫øt k·∫ø tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ tr∆∞·ªõc khi code s·∫µn s√†ng.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following techniques is MOST useful for an Agile tester to use for identifying test conditions and designing test cases for a User Story?",
    translation: {
      vi: "K·ªπ thu·∫≠t n√†o sau ƒë√¢y l√† H·ªÆU √çCH NH·∫§T ƒë·ªÉ tester Agile s·ª≠ d·ª•ng nh·∫±m x√°c ƒë·ªãnh ƒëi·ªÅu ki·ªán ki·ªÉm th·ª≠ v√† thi·∫øt k·∫ø c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ cho m·ªôt User Story?",
    },
    answers: [
      {
        text: "Creating test cases from the User Story and acceptance criteria.",
        correct: true,
        translation: {
          vi: "T·∫°o c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ t·ª´ User Story v√† c√°c ti√™u ch√≠ ch·∫•p nh·∫≠n (acceptance criteria).",
        },
      },
      {
        text: "Using checklists to guide exploratory testing.",
        correct: false,
        translation: {
          vi: "S·ª≠ d·ª•ng danh s√°ch ki·ªÉm tra (checklists) ƒë·ªÉ h∆∞·ªõng d·∫´n ki·ªÉm th·ª≠ thƒÉm d√≤ (exploratory testing).",
        },
      },
      {
        text: "Creating a traceability matrix between the user story and the test cases.",
        correct: false,
        translation: {
          vi: "T·∫°o ma tr·∫≠n truy xu·∫•t ngu·ªìn g·ªëc (traceability matrix) gi·ªØa user story v√† c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "Implementing test automation to increase the test coverage.",
        correct: false,
        translation: {
          vi: "Th·ª±c hi·ªán t·ª± ƒë·ªông h√≥a ki·ªÉm th·ª≠ ƒë·ªÉ tƒÉng ph·∫°m vi ki·ªÉm th·ª≠ (test coverage).",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a primary purpose of having a 'Definition of Done'?",
    translation: {
      vi: "M·ª•c ƒë√≠ch ch√≠nh n√†o sau ƒë√¢y c·ªßa vi·ªác c√≥ 'ƒê·ªãnh nghƒ©a Ho√†n th√†nh' (Definition of Done)?",
    },
    answers: [
      {
        text: "To ensure that the Product Backlog is ordered correctly.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ ƒë·∫£m b·∫£o r·∫±ng Product Backlog ƒë∆∞·ª£c s·∫Øp x·∫øp ƒë√∫ng.",
        },
      },
      {
        text: "To define the activities to be performed by the developers.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ x√°c ƒë·ªãnh c√°c ho·∫°t ƒë·ªông ƒë∆∞·ª£c th·ª±c hi·ªán b·ªüi c√°c developer.",
        },
      },
      {
        text: "To describe the quality criteria that must be met for the increment to be released.",
        correct: true,
        translation: {
          vi: "ƒê·ªÉ m√¥ t·∫£ c√°c ti√™u ch√≠ ch·∫•t l∆∞·ª£ng ph·∫£i ƒë∆∞·ª£c ƒë√°p ·ª©ng ƒë·ªÉ phi√™n b·∫£n tƒÉng tr∆∞·ªüng (increment) ƒë∆∞·ª£c ph√°t h√†nh.",
        },
      },
      {
        text: "To provide a template for creating User Stories.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ cung c·∫•p m·ªôt m·∫´u cho vi·ªác t·∫°o User Stories.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is the BEST approach for managing and organizing test-related information and artifacts in an Agile project?",
    translation: {
      vi: "C√°ch ti·∫øp c·∫≠n T·ªêT NH·∫§T n√†o sau ƒë√¢y ƒë·ªÉ qu·∫£n l√Ω v√† t·ªï ch·ª©c th√¥ng tin v√† t√†i li·ªáu li√™n quan ƒë·∫øn ki·ªÉm th·ª≠ trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "Store all test cases and test data in a version-controlled repository to ensure traceability.",
        correct: false,
        translation: {
          vi: "L∆∞u tr·ªØ t·∫•t c·∫£ c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ v√† d·ªØ li·ªáu ki·ªÉm th·ª≠ trong m·ªôt kho l∆∞u tr·ªØ ƒë∆∞·ª£c ki·ªÉm so√°t phi√™n b·∫£n (version-controlled repository) ƒë·ªÉ ƒë·∫£m b·∫£o kh·∫£ nƒÉng truy xu·∫•t ngu·ªìn g·ªëc (traceability).",
        },
      },
      {
        text: "Keep all test-related information in a single, comprehensive test plan that is maintained by the tester.",
        correct: false,
        translation: {
          vi: "Gi·ªØ t·∫•t c·∫£ th√¥ng tin li√™n quan ƒë·∫øn ki·ªÉm th·ª≠ trong m·ªôt k·∫ø ho·∫°ch ki·ªÉm th·ª≠ duy nh·∫•t, to√†n di·ªán do tester duy tr√¨.",
        },
      },
      {
        text: "Use the same tools and conventions as the rest of the team to store and organize test-related information.",
        correct: true,
        translation: {
          vi: "S·ª≠ d·ª•ng c√πng c√°c c√¥ng c·ª• v√† quy ∆∞·ªõc v·ªõi ph·∫ßn c√≤n l·∫°i c·ªßa nh√≥m ƒë·ªÉ l∆∞u tr·ªØ v√† t·ªï ch·ª©c th√¥ng tin li√™n quan ƒë·∫øn ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "Focus on automating all test documentation, rather than manual documentation.",
        correct: false,
        translation: {
          vi: "T·∫≠p trung v√†o vi·ªác t·ª± ƒë·ªông h√≥a t·∫•t c·∫£ t√†i li·ªáu ki·ªÉm th·ª≠, thay v√¨ t√†i li·ªáu th·ªß c√¥ng.",
        },
      },
    ],
  },
  {
    question: "How does risk-based testing align with Agile principles?",
    translation: {
      vi: "Ki·ªÉm th·ª≠ d·ª±a tr√™n r·ªßi ro (risk-based testing) ph√π h·ª£p v·ªõi c√°c nguy√™n t·∫Øc Agile nh∆∞ th·∫ø n√†o?",
    },
    answers: [
      {
        text: "It focuses on testing areas that have the highest technical complexity.",
        correct: false,
        translation: {
          vi: "N√≥ t·∫≠p trung v√†o vi·ªác ki·ªÉm th·ª≠ c√°c khu v·ª±c c√≥ ƒë·ªô ph·ª©c t·∫°p k·ªπ thu·∫≠t cao nh·∫•t.",
        },
      },
      {
        text: "It ensures that only the features requested by the Product Owner are tested.",
        correct: false,
        translation: {
          vi: "N√≥ ƒë·∫£m b·∫£o r·∫±ng ch·ªâ c√°c t√≠nh nƒÉng ƒë∆∞·ª£c y√™u c·∫ßu b·ªüi Product Owner m·ªõi ƒë∆∞·ª£c ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "It focuses on delivering business value by prioritizing the testing of the most important and high-risk features.",
        correct: true,
        translation: {
          vi: "N√≥ t·∫≠p trung v√†o vi·ªác mang l·∫°i gi√° tr·ªã kinh doanh b·∫±ng c√°ch ∆∞u ti√™n ki·ªÉm th·ª≠ c√°c t√≠nh nƒÉng quan tr·ªçng v√† c√≥ r·ªßi ro cao nh·∫•t.",
        },
      },
      {
        text: "It eliminates the need for any regression testing, thus saving time in an iteration.",
        correct: false,
        translation: {
          vi: "N√≥ lo·∫°i b·ªè nhu c·∫ßu v·ªÅ b·∫•t k·ª≥ ki·ªÉm th·ª≠ h·ªìi quy n√†o, t·ª´ ƒë√≥ ti·∫øt ki·ªám th·ªùi gian trong m·ªôt v√≤ng l·∫∑p.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a primary benefit of test automation in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt l·ª£i √≠ch ch√≠nh c·ªßa t·ª± ƒë·ªông h√≥a ki·ªÉm th·ª≠ trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "Automated tests can serve as technical documentation for the system.",
        correct: false,
        translation: {
          vi: "C√°c ki·ªÉm th·ª≠ t·ª± ƒë·ªông c√≥ th·ªÉ ƒë√≥ng vai tr√≤ l√† t√†i li·ªáu k·ªπ thu·∫≠t cho h·ªá th·ªëng.",
        },
      },
      {
        text: "The team can create a large suite of regression tests that can be run quickly and repeatedly.",
        correct: true,
        translation: {
          vi: "Nh√≥m c√≥ th·ªÉ t·∫°o m·ªôt b·ªô l·ªõn c√°c ki·ªÉm th·ª≠ h·ªìi quy (regression tests) c√≥ th·ªÉ ch·∫°y nhanh ch√≥ng v√† l·∫∑p l·∫°i.",
        },
      },
      {
        text: "Test automation is generally less expensive than manual testing over the whole project life cycle.",
        correct: false,
        translation: {
          vi: "T·ª± ƒë·ªông h√≥a ki·ªÉm th·ª≠ th∆∞·ªùng √≠t t·ªën k√©m h∆°n ki·ªÉm th·ª≠ th·ªß c√¥ng trong su·ªët v√≤ng ƒë·ªùi d·ª± √°n.",
        },
      },
      {
        text: "It allows testers to focus on testing only new features in each iteration.",
        correct: false,
        translation: {
          vi: "N√≥ cho ph√©p tester t·∫≠p trung v√†o vi·ªác ch·ªâ ki·ªÉm th·ª≠ c√°c t√≠nh nƒÉng m·ªõi trong m·ªói v√≤ng l·∫∑p.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following should be considered the HIGHEST priority when selecting tests for automation?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y n√™n ƒë∆∞·ª£c coi l√† ∆∞u ti√™n CAO NH·∫§T khi ch·ªçn c√°c ki·ªÉm th·ª≠ ƒë·ªÉ t·ª± ƒë·ªông h√≥a?",
    },
    answers: [
      {
        text: "Tests that verify new features in the current iteration.",
        correct: false,
        translation: {
          vi: "C√°c ki·ªÉm th·ª≠ x√°c minh c√°c t√≠nh nƒÉng m·ªõi trong v√≤ng l·∫∑p hi·ªán t·∫°i.",
        },
      },
      {
        text: "Tests that cover the highest business risk areas of the system.",
        correct: false,
        translation: {
          vi: "C√°c ki·ªÉm th·ª≠ bao g·ªìm c√°c khu v·ª±c r·ªßi ro kinh doanh cao nh·∫•t c·ªßa h·ªá th·ªëng.",
        },
      },
      {
        text: "Tests that need to be run repeatedly to confirm the existing functionality still works.",
        correct: true,
        translation: {
          vi: "C√°c ki·ªÉm th·ª≠ c·∫ßn ƒë∆∞·ª£c ch·∫°y l·∫∑p ƒëi l·∫∑p l·∫°i ƒë·ªÉ x√°c nh·∫≠n ch·ª©c nƒÉng hi·ªán c√≥ v·∫´n ho·∫°t ƒë·ªông.",
        },
      },
      {
        text: "Tests that are easy to automate and require minimal maintenance.",
        correct: false,
        translation: {
          vi: "C√°c ki·ªÉm th·ª≠ d·ªÖ t·ª± ƒë·ªông h√≥a v√† y√™u c·∫ßu b·∫£o tr√¨ t·ªëi thi·ªÉu.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a key risk of a fully manual regression testing approach in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† r·ªßi ro ch√≠nh c·ªßa m·ªôt ph∆∞∆°ng ph√°p ki·ªÉm th·ª≠ h·ªìi quy ho√†n to√†n th·ªß c√¥ng trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "The cost of testing will be too high.",
        correct: false,
        translation: {
          vi: "Chi ph√≠ ki·ªÉm th·ª≠ s·∫Ω qu√° cao.",
        },
      },
      {
        text: "The test team will lack the necessary technical skills.",
        correct: false,
        translation: {
          vi: "Nh√≥m ki·ªÉm th·ª≠ s·∫Ω thi·∫øu c√°c k·ªπ nƒÉng k·ªπ thu·∫≠t c·∫ßn thi·∫øt.",
        },
      },
      {
        text: "It may lead to poor test coverage for newly developed features.",
        correct: false,
        translation: {
          vi: "N√≥ c√≥ th·ªÉ d·∫´n ƒë·∫øn ph·∫°m vi ki·ªÉm th·ª≠ k√©m cho c√°c t√≠nh nƒÉng m·ªõi ƒë∆∞·ª£c ph√°t tri·ªÉn.",
        },
      },
      {
        text: "The elapsed time needed for regression testing at the end of each iteration may increase, potentially delaying releases.",
        correct: true,
        translation: {
          vi: "Th·ªùi gian c·∫ßn thi·∫øt cho vi·ªác ki·ªÉm th·ª≠ h·ªìi quy v√†o cu·ªëi m·ªói v√≤ng l·∫∑p c√≥ th·ªÉ tƒÉng l√™n, c√≥ kh·∫£ nƒÉng l√†m ch·∫≠m tr·ªÖ vi·ªác ph√°t h√†nh.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following describes the PRIMARY focus of the first level of the Test Automation Pyramid (Unit Tests)?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y m√¥ t·∫£ tr·ªçng t√¢m CH√çNH c·ªßa c·∫•p ƒë·ªô ƒë·∫ßu ti√™n c·ªßa Kim t·ª± th√°p T·ª± ƒë·ªông h√≥a Ki·ªÉm th·ª≠ (Test Automation Pyramid) - Ki·ªÉm th·ª≠ ƒê∆°n v·ªã (Unit Tests)?",
    },
    answers: [
      {
        text: "Testing the whole system from a user's perspective.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ to√†n b·ªô h·ªá th·ªëng t·ª´ g√≥c ƒë·ªô ng∆∞·ªùi d√πng.",
        },
      },
      {
        text: "Testing the individual components (e.g., classes or methods) of the code.",
        correct: true,
        translation: {
          vi: "Ki·ªÉm th·ª≠ c√°c th√†nh ph·∫ßn ri√™ng l·∫ª (v√≠ d·ª•: c√°c l·ªõp ho·∫∑c ph∆∞∆°ng th·ª©c) c·ªßa m√£ code.",
        },
      },
      {
        text: "Testing the interactions between major parts of the system.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ s·ª± t∆∞∆°ng t√°c gi·ªØa c√°c ph·∫ßn ch√≠nh c·ªßa h·ªá th·ªëng.",
        },
      },
      {
        text: "Testing the user interface and performance of the system.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ giao di·ªán ng∆∞·ªùi d√πng v√† hi·ªáu su·∫•t c·ªßa h·ªá th·ªëng.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a key benefit of using Behavior-Driven Development (BDD) in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt l·ª£i √≠ch ch√≠nh c·ªßa vi·ªác s·ª≠ d·ª•ng Ph√°t tri·ªÉn H∆∞·ªõng h√†nh vi (Behavior-Driven Development - BDD) trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "It ensures that all testing is automated, thus saving time and cost.",
        correct: false,
        translation: {
          vi: "N√≥ ƒë·∫£m b·∫£o r·∫±ng t·∫•t c·∫£ vi·ªác ki·ªÉm th·ª≠ ƒë∆∞·ª£c t·ª± ƒë·ªông h√≥a, do ƒë√≥ ti·∫øt ki·ªám th·ªùi gian v√† chi ph√≠.",
        },
      },
      {
        text: "It facilitates collaboration between the business, development, and testing teams using a common language.",
        correct: true,
        translation: {
          vi: "N√≥ t·∫°o ƒëi·ªÅu ki·ªán h·ª£p t√°c gi·ªØa c√°c nh√≥m kinh doanh, ph√°t tri·ªÉn v√† ki·ªÉm th·ª≠ b·∫±ng c√°ch s·ª≠ d·ª•ng m·ªôt ng√¥n ng·ªØ chung.",
        },
      },
      {
        text: "It focuses the testing effort primarily on non-functional quality characteristics.",
        correct: false,
        translation: {
          vi: "N√≥ t·∫≠p trung n·ªó l·ª±c ki·ªÉm th·ª≠ ch·ªß y·∫øu v√†o c√°c ƒë·∫∑c t√≠nh ch·∫•t l∆∞·ª£ng phi ch·ª©c nƒÉng.",
        },
      },
      {
        text: "It eliminates the need for any formal acceptance criteria for User Stories.",
        correct: false,
        translation: {
          vi: "N√≥ lo·∫°i b·ªè nhu c·∫ßu v·ªÅ b·∫•t k·ª≥ ti√™u ch√≠ ch·∫•p nh·∫≠n ch√≠nh th·ª©c n√†o cho User Stories.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is an example of an 'Agile Testing Quadrant 2' activity?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt v√≠ d·ª• v·ªÅ ho·∫°t ƒë·ªông 'Agile Testing Quadrant 2'?",
    },
    answers: [
      {
        text: "Unit testing and refactoring.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ƒë∆°n v·ªã (Unit testing) v√† t√°i c·∫•u tr√∫c (refactoring).",
        },
      },
      {
        text: "Exploratory testing and scenario-based testing.",
        correct: true,
        translation: {
          vi: "Ki·ªÉm th·ª≠ thƒÉm d√≤ (Exploratory testing) v√† ki·ªÉm th·ª≠ d·ª±a tr√™n k·ªãch b·∫£n (scenario-based testing).",
        },
      },
      {
        text: "Load testing and security testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ t·∫£i (Load testing) v√† ki·ªÉm th·ª≠ b·∫£o m·∫≠t (security testing).",
        },
      },
      {
        text: "User acceptance testing and beta testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n c·ªßa ng∆∞·ªùi d√πng (User acceptance testing) v√† ki·ªÉm th·ª≠ beta.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is an example of an 'Agile Testing Quadrant 3' activity?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt v√≠ d·ª• v·ªÅ ho·∫°t ƒë·ªông 'Agile Testing Quadrant 3'?",
    },
    answers: [
      {
        text: "Testing user experience (UX) and usability.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ tr·∫£i nghi·ªám ng∆∞·ªùi d√πng (UX) v√† kh·∫£ nƒÉng s·ª≠ d·ª•ng (usability).",
        },
      },
      {
        text: "Automating acceptance tests using BDD.",
        correct: false,
        translation: {
          vi: "T·ª± ƒë·ªông h√≥a ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n (acceptance tests) b·∫±ng c√°ch s·ª≠ d·ª•ng BDD.",
        },
      },
      {
        text: "Exploratory testing with stakeholders.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ thƒÉm d√≤ (Exploratory testing) v·ªõi c√°c b√™n li√™n quan.",
        },
      },
      {
        text: "Usability testing and alpha/beta testing.",
        correct: true,
        translation: {
          vi: "Ki·ªÉm th·ª≠ kh·∫£ nƒÉng s·ª≠ d·ª•ng (Usability testing) v√† ki·ªÉm th·ª≠ alpha/beta.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following test types is typically found in 'Agile Testing Quadrant 4'?",
    translation: {
      vi: "Lo·∫°i ki·ªÉm th·ª≠ n√†o sau ƒë√¢y th∆∞·ªùng ƒë∆∞·ª£c t√¨m th·∫•y trong 'Agile Testing Quadrant 4'?",
    },
    answers: [
      {
        text: "Functional acceptance testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n ch·ª©c nƒÉng (Functional acceptance testing).",
        },
      },
      {
        text: "Security testing.",
        correct: true,
        translation: {
          vi: "Ki·ªÉm th·ª≠ b·∫£o m·∫≠t (Security testing).",
        },
      },
      {
        text: "Unit testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ƒë∆°n v·ªã (Unit testing).",
        },
      },
      {
        text: "Examples testing.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ theo v√≠ d·ª• (Examples testing).",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a primary goal of Acceptance Test-Driven Development (ATDD)?",
    translation: {
      vi: "M·ª•c ti√™u ch√≠nh n√†o sau ƒë√¢y c·ªßa Ph√°t tri·ªÉn H∆∞·ªõng ki·ªÉm th·ª≠ Ch·∫•p nh·∫≠n (Acceptance Test-Driven Development - ATDD)?",
    },
    answers: [
      {
        text: "To remove the need for human testers by automating all acceptance tests.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ lo·∫°i b·ªè nhu c·∫ßu v·ªÅ tester con ng∆∞·ªùi b·∫±ng c√°ch t·ª± ƒë·ªông h√≥a t·∫•t c·∫£ ki·ªÉm th·ª≠ ch·∫•p nh·∫≠n.",
        },
      },
      {
        text: "To help the team understand the true requirements of the business before development begins.",
        correct: true,
        translation: {
          vi: "ƒê·ªÉ gi√∫p nh√≥m hi·ªÉu ƒë∆∞·ª£c c√°c y√™u c·∫ßu th·ª±c s·ª± c·ªßa nghi·ªáp v·ª• tr∆∞·ªõc khi qu√° tr√¨nh ph√°t tri·ªÉn b·∫Øt ƒë·∫ßu.",
        },
      },
      {
        text: "To ensure that all code is written with 100% code coverage.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ ƒë·∫£m b·∫£o r·∫±ng t·∫•t c·∫£ code ƒë∆∞·ª£c vi·∫øt v·ªõi ƒë·ªô bao ph·ªß m√£ (code coverage) 100%.",
        },
      },
      {
        text: "To allow the Product Owner to approve the completion of each User Story during the Daily Standup.",
        correct: false,
        translation: {
          vi: "ƒê·ªÉ cho ph√©p Product Owner ph√™ duy·ªát vi·ªác ho√†n th√†nh m·ªói User Story trong cu·ªôc h·ªçp Daily Standup.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following BEST describes the primary output of using Test-Driven Development (TDD) at the code level?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y m√¥ t·∫£ T·ªêT NH·∫§T ƒë·∫ßu ra ch√≠nh c·ªßa vi·ªác s·ª≠ d·ª•ng Ph√°t tri·ªÉn H∆∞·ªõng ki·ªÉm th·ª≠ (Test-Driven Development - TDD) ·ªü c·∫•p ƒë·ªô m√£ code?",
    },
    answers: [
      {
        text: "A comprehensive test plan that lists all unit tests to be automated.",
        correct: false,
        translation: {
          vi: "M·ªôt k·∫ø ho·∫°ch ki·ªÉm th·ª≠ to√†n di·ªán li·ªát k√™ t·∫•t c·∫£ c√°c ki·ªÉm th·ª≠ ƒë∆°n v·ªã c·∫ßn ƒë∆∞·ª£c t·ª± ƒë·ªông h√≥a.",
        },
      },
      {
        text: "High-quality code that is unit tested and designed for testability.",
        correct: true,
        translation: {
          vi: "M√£ code ch·∫•t l∆∞·ª£ng cao, ƒë√£ ƒë∆∞·ª£c ki·ªÉm th·ª≠ ƒë∆°n v·ªã v√† ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ d·ªÖ ki·ªÉm th·ª≠ (testability).",
        },
      },
      {
        text: "A list of acceptance criteria for all User Stories in the Product Backlog.",
        correct: false,
        translation: {
          vi: "M·ªôt danh s√°ch c√°c ti√™u ch√≠ ch·∫•p nh·∫≠n cho t·∫•t c·∫£ User Stories trong Product Backlog.",
        },
      },
      {
        text: "A detailed defect report for each bug found during the coding process.",
        correct: false,
        translation: {
          vi: "M·ªôt b√°o c√°o l·ªói chi ti·∫øt cho m·ªói l·ªói ƒë∆∞·ª£c t√¨m th·∫•y trong qu√° tr√¨nh coding.",
        },
      },
    ],
  },
  {
    question: "Which of the following is an example of 'Exploratory testing'?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt v√≠ d·ª• v·ªÅ 'Ki·ªÉm th·ª≠ thƒÉm d√≤' (Exploratory testing)?",
    },
    answers: [
      {
        text: "Designing test cases based on the requirements specification before any code is written.",
        correct: false,
        translation: {
          vi: "Thi·∫øt k·∫ø c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ d·ª±a tr√™n ƒë·∫∑c t·∫£ y√™u c·∫ßu tr∆∞·ªõc khi b·∫•t k·ª≥ m√£ code n√†o ƒë∆∞·ª£c vi·∫øt.",
        },
      },
      {
        text: "An experienced tester spontaneously designing and executing tests to discover bugs and learn about the system.",
        correct: true,
        translation: {
          vi: "M·ªôt tester c√≥ kinh nghi·ªám t·ª± ph√°t thi·∫øt k·∫ø v√† th·ª±c hi·ªán c√°c ki·ªÉm th·ª≠ ƒë·ªÉ kh√°m ph√° l·ªói v√† t√¨m hi·ªÉu v·ªÅ h·ªá th·ªëng.",
        },
      },
      {
        text: "Running a comprehensive suite of automated tests on the whole system to check the latest build.",
        correct: false,
        translation: {
          vi: "Ch·∫°y m·ªôt b·ªô ki·ªÉm th·ª≠ t·ª± ƒë·ªông to√†n di·ªán tr√™n to√†n b·ªô h·ªá th·ªëng ƒë·ªÉ ki·ªÉm tra b·∫£n d·ª±ng (build) m·ªõi nh·∫•t.",
        },
      },
      {
        text: "Performing a test coverage analysis to determine the percentage of requirements that have been tested.",
        correct: false,
        translation: {
          vi: "Th·ª±c hi·ªán ph√¢n t√≠ch ph·∫°m vi ki·ªÉm th·ª≠ ƒë·ªÉ x√°c ƒë·ªãnh t·ª∑ l·ªá ph·∫ßn trƒÉm c√°c y√™u c·∫ßu ƒë√£ ƒë∆∞·ª£c ki·ªÉm th·ª≠.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a key characteristic of 'Session-Based Test Management'?",
    translation: {
      vi: "ƒê·∫∑c ƒëi·ªÉm ch√≠nh n√†o sau ƒë√¢y c·ªßa 'Qu·∫£n l√Ω Ki·ªÉm th·ª≠ D·ª±a tr√™n Phi√™n' (Session-Based Test Management)?",
    },
    answers: [
      {
        text: "Testing is structured using test scripts that detail every test step.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ƒë∆∞·ª£c c·∫•u tr√∫c b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c k·ªãch b·∫£n ki·ªÉm th·ª≠ (test scripts) m√¥ t·∫£ chi ti·∫øt t·ª´ng b∆∞·ªõc ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "Testing is time-boxed and includes a charter, execution, and debriefing.",
        correct: true,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ƒë∆∞·ª£c gi·ªõi h·∫°n th·ªùi gian (time-boxed) v√† bao g·ªìm m·ªôt ƒëi·ªÅu l·ªá (charter), vi·ªác th·ª±c hi·ªán (execution) v√† b√°o c√°o t√≥m t·∫Øt (debriefing).",
        },
      },
      {
        text: "Testing is primarily focused on functional areas with high business risk.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ch·ªß y·∫øu t·∫≠p trung v√†o c√°c khu v·ª±c ch·ª©c nƒÉng c√≥ r·ªßi ro kinh doanh cao.",
        },
      },
      {
        text: "Testing is conducted collaboratively by developers and testers.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ ƒë∆∞·ª£c ti·∫øn h√†nh h·ª£p t√°c b·ªüi c√°c developer v√† tester.",
        },
      },
    ],
  },
  {
    question:
      'Given the following User Story: "An online application calculates shipping costs for purchased goods to customers, based on the following criteria: Standard shipping cost for under 6 items; Shipping fee of $5 for 6-10 items; Free shipping for over 10 items".\n\nWhich of the following black box test design techniques is best for this User Story?',
    translation: {
      vi: 'Cho User Story sau: "M·ªôt ·ª©ng d·ª•ng tr·ª±c tuy·∫øn t√≠nh ph√≠ v·∫≠n chuy·ªÉn h√†ng h√≥a ƒë√£ mua cho kh√°ch h√†ng, d·ª±a tr√™n c√°c ti√™u ch√≠ sau: Chi ph√≠ v·∫≠n chuy·ªÉn ti√™u chu·∫©n cho d∆∞·ªõi 6 m·∫∑t h√†ng; Ph√≠ v·∫≠n chuy·ªÉn l√† $5 cho 6-10 m·∫∑t h√†ng; Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn cho h∆°n 10 m·∫∑t h√†ng".\n\nK·ªπ thu·∫≠t thi·∫øt k·∫ø ki·ªÉm th·ª≠ h·ªôp ƒëen (black box test design technique) n√†o sau ƒë√¢y l√† t·ªët nh·∫•t cho User Story n√†y?',
    },
    answers: [
      {
        text: "State Transition testing: Testing the following states - browse, log in, select, purchase, confirm and exit.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ Chuy·ªÉn ƒë·ªïi Tr·∫°ng th√°i (State Transition testing): Ki·ªÉm th·ª≠ c√°c tr·∫°ng th√°i sau - duy·ªát, ƒëƒÉng nh·∫≠p, ch·ªçn, mua, x√°c nh·∫≠n v√† tho√°t.",
        },
      },
      {
        text: "Decision tables: Testing the following conditions - User logged in; At least 1 item in the basket; Purchase confirmed; Funding accepted; with the resulting action being - Delivery.",
        correct: false,
        translation: {
          vi: "B·∫£ng Quy·∫øt ƒë·ªãnh (Decision tables): Ki·ªÉm th·ª≠ c√°c ƒëi·ªÅu ki·ªán sau - Ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p; C√≥ √≠t nh·∫•t 1 m·∫∑t h√†ng trong gi·ªè h√†ng; X√°c nh·∫≠n mua h√†ng; Ngu·ªìn ti·ªÅn ƒë∆∞·ª£c ch·∫•p thu·∫≠n; v·ªõi h√†nh ƒë·ªông k·∫øt qu·∫£ l√† - Giao h√†ng.",
        },
      },
      {
        text: "Boundary Value Analysis: Testing the following inputs - 0, 5, 6, 10, 11, max.",
        correct: true,
        translation: {
          vi: "Ph√¢n t√≠ch Gi√° tr·ªã Bi√™n (Boundary Value Analysis): Ki·ªÉm th·ª≠ c√°c ƒë·∫ßu v√†o sau - 0, 5, 6, 10, 11, max.",
        },
      },
      {
        text: "Use Case Testing: Actor = customer; Precondition = customer logged in, selected and purchased goods; Postcondition = goods shipped.",
        correct: false,
        translation: {
          vi: "Ki·ªÉm th·ª≠ Tr∆∞·ªùng h·ª£p S·ª≠ d·ª•ng (Use Case Testing): T√°c nh√¢n = kh√°ch h√†ng; ƒêi·ªÅu ki·ªán ti√™n quy·∫øt = kh√°ch h√†ng ƒëƒÉng nh·∫≠p, ch·ªçn v√† mua h√†ng; ƒêi·ªÅu ki·ªán h·∫≠u k·ª≥ = h√†ng ƒë∆∞·ª£c v·∫≠n chuy·ªÉn.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is a common challenge when using Specification by Example (SBE) in an Agile project?",
    translation: {
      vi: "ƒêi·ªÅu n√†o sau ƒë√¢y l√† m·ªôt th√°ch th·ª©c ph·ªï bi·∫øn khi s·ª≠ d·ª•ng ƒê·∫∑c t·∫£ theo V√≠ d·ª• (Specification by Example - SBE) trong m·ªôt d·ª± √°n Agile?",
    },
    answers: [
      {
        text: "The business stakeholders may not be available to define the examples.",
        correct: true,
        translation: {
          vi: "C√°c b√™n li√™n quan nghi·ªáp v·ª• c√≥ th·ªÉ kh√¥ng s·∫µn s√†ng ƒë·ªÉ ƒë·ªãnh nghƒ©a c√°c v√≠ d·ª•.",
        },
      },
      {
        text: "The test tool to implement SBE may be too expensive.",
        correct: false,
        translation: {
          vi: "C√¥ng c·ª• ki·ªÉm th·ª≠ ƒë·ªÉ th·ª±c hi·ªán SBE c√≥ th·ªÉ qu√° ƒë·∫Øt.",
        },
      },
      {
        text: "The examples may not cover all the boundary values, thus reducing test coverage.",
        correct: false,
        translation: {
          vi: "C√°c v√≠ d·ª• c√≥ th·ªÉ kh√¥ng bao ph·ªß t·∫•t c·∫£ c√°c gi√° tr·ªã bi√™n, t·ª´ ƒë√≥ l√†m gi·∫£m ph·∫°m vi ki·ªÉm th·ª≠.",
        },
      },
      {
        text: "The team members may not be interested in sharing a common language.",
        correct: false,
        translation: {
          vi: "C√°c th√†nh vi√™n nh√≥m c√≥ th·ªÉ kh√¥ng quan t√¢m ƒë·∫øn vi·ªác chia s·∫ª m·ªôt ng√¥n ng·ªØ chung.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is the MOST appropriate technique for estimating testing effort for User Stories in an Agile environment?",
    translation: {
      vi: "K·ªπ thu·∫≠t n√†o sau ƒë√¢y l√† PH√ô H·ª¢P NH·∫§T ƒë·ªÉ ∆∞·ªõc t√≠nh n·ªó l·ª±c ki·ªÉm th·ª≠ cho User Stories trong m√¥i tr∆∞·ªùng Agile?",
    },
    answers: [
      {
        text: "Analogy-based estimation using past project data.",
        correct: false,
        translation: {
          vi: "∆Ø·ªõc t√≠nh d·ª±a tr√™n ph√©p lo·∫°i suy (Analogy-based estimation) b·∫±ng c√°ch s·ª≠ d·ª•ng d·ªØ li·ªáu d·ª± √°n c≈©.",
        },
      },
      {
        text: "Planning Poker to gain consensus on the relative size of User Stories.",
        correct: true,
        translation: {
          vi: "Planning Poker ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c s·ª± ƒë·ªìng thu·∫≠n v·ªÅ k√≠ch th∆∞·ªõc t∆∞∆°ng ƒë·ªëi c·ªßa User Stories.",
        },
      },
      {
        text: "Expert judgment based on the tester's experience on the current project.",
        correct: false,
        translation: {
          vi: "ƒê√°nh gi√° c·ªßa chuy√™n gia d·ª±a tr√™n kinh nghi·ªám c·ªßa tester trong d·ª± √°n hi·ªán t·∫°i.",
        },
      },
      {
        text: "Estimation based on a percentage of the development effort.",
        correct: false,
        translation: {
          vi: "∆Ø·ªõc t√≠nh d·ª±a tr√™n t·ª∑ l·ªá ph·∫ßn trƒÉm c·ªßa n·ªó l·ª±c ph√°t tri·ªÉn.",
        },
      },
    ],
  },
  {
    question:
      "Which of the following is the BEST Agile testing metric for measuring progress towards the 'Definition of Done'?",
    translation: {
      vi: "S·ªë li·ªáu ki·ªÉm th·ª≠ Agile n√†o sau ƒë√¢y l√† T·ªêT NH·∫§T ƒë·ªÉ ƒëo l∆∞·ªùng ti·∫øn ƒë·ªô h∆∞·ªõng t·ªõi 'ƒê·ªãnh nghƒ©a Ho√†n th√†nh' (Definition of Done)?",
    },
    answers: [
      {
        text: "The number of defects found per day.",
        correct: false,
        translation: {
          vi: "S·ªë l∆∞·ª£ng l·ªói ƒë∆∞·ª£c t√¨m th·∫•y m·ªói ng√†y.",
        },
      },
      {
        text: "The percentage of automated test cases.",
        correct: false,
        translation: {
          vi: "Ph·∫ßn trƒÉm c√°c tr∆∞·ªùng h·ª£p ki·ªÉm th·ª≠ ƒë∆∞·ª£c t·ª± ƒë·ªông h√≥a.",
        },
      },
      {
        text: "The number of automated regression test failures.",
        correct: false,
        translation: {
          vi: "S·ªë l·∫ßn ki·ªÉm th·ª≠ h·ªìi quy t·ª± ƒë·ªông th·∫•t b·∫°i.",
        },
      },
      {
        text: "The cumulative number of User Stories that have been passed and accepted.",
        correct: true,
        translation: {
          vi: "T·ªïng s·ªë t√≠ch l≈©y (cumulative number) c√°c User Stories ƒë√£ ƒë∆∞·ª£c th√¥ng qua v√† ch·∫•p nh·∫≠n.",
        },
      },
    ],
  },
];
